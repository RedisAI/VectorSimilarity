name: Test an OS

on:
  workflow_call:
    inputs:
      env:
        description: 'Environment to run tests on'
        type: string
        default: 'ubuntu-latest'
      container:
        description: 'Container to run tests on'
        type: string
      pre-checkout-script:
        description: 'Script to run before checkout'
        type: string
      san:
        type: string

env:
  SAN_VALUE: ${{ inputs.san }}

jobs:
  test:
    name: Test ${{ inputs.container && format('{0} (on {1})', inputs.container, inputs.env) || inputs.env }}${{ inputs.san && ' sanitizer' || '' }}
    runs-on: ${{ inputs.env }}
    container: ${{ inputs.container || null }}
    defaults:
      run:
        shell: bash -l -eo pipefail {0}
    steps:
      - name: pre-checkout script
        if: ${{ inputs.pre-checkout-script }}
        shell: sh -l -eo pipefail {0}
        run: ${{ inputs.pre-checkout-script }}
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.number && format('refs/pull/{0}/merge', github.event.number) || github.head_ref }}
      - name: install dependencies
        run: .install/install_script.sh ${{ !inputs.container && 'sudo' || '' }}
      - name: Set Artifact Name
        # Artifact names have to be unique, so we base them on the environment.
        # We also remove invalid characters from the name.
        id: artifact-name
        run: | # Invalid characters include: Double quote ", Colon :, Less than <, Greater than >, Vertical bar |, Asterisk *, Question mark ?
          NAME="${{ inputs.container && format('{0} (on {1})', inputs.container, inputs.env) || inputs.env }} ${{ runner.arch }}"
          NAME="$(echo $NAME | sed -e 's/[":\/\\<>\|*?]/_/g')" # Replace invalid characters with underscores
          echo "name=$NAME" >> $GITHUB_OUTPUT

      - name: unit tests
        run: make unit_test SAN="$SAN_VALUE"
      - name: Set test path
        if: ${{ inputs.san  == 'address' && failure() }}
        id: tests-artifact-path
        run: |
          FULL_VARIANT=$(uname)-$(uname -m)-debug-asan
          echo "path=bin/${FULL_VARIANT}/unit_tests/Testing/Temporary/" >> $GITHUB_OUTPUT
      - name: Archive san tests reports
        if: ${{ inputs.san  == 'address' && failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: san tests reports on ${{ steps.artifact-name.outputs.name }}
          path: ${{ steps.tests-artifact-path.outputs.path }}
