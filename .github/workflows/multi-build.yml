name: multi-build flow

on:
  workflow_call:
  pull_request:
    types:
      - labeled
    branches-ignore:
      - '*docs'
      - '*noci'

env:
  DEFAULT_CHECK: true


  # github.event_name == 'workflow_call' || github.event.label.name == 'multi-build'

jobs:
  general check:
    name: check if multi-build is required
    runs-on: ubuntu-latest
    outputs:
      general-check: ${{ steps.check.outputs.general-check }}
    steps:
      - name: check if multi-build is required
        id: check
        run: |
          if [[ ${{ github.event_name }} == 'workflow_call' ]]; then
            echo "::set-output name=general-check::true"
          elif [[ ${{ github.event.label.name }} == 'multi-build' ]]; then
            echo "::set-output name=general-check::true"
          else
            echo "::set-output name=general-check::false"
          fi
  rocky8:
    if: ${{ DEFAULT_CHECK }} || github.event.label.name == 'rocky8'
    runs-on: ubuntu-latest
    container:
      image: rockylinux:8
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install dependencies
        run: .install/install_script.sh
      - name: unit tests
        run: |
          export CXX=/opt/rh/gcc-toolset-10/root/usr/bin/g++
          export CC=/opt/rh/gcc-toolset-10/root/usr/bin/gcc
          make unit_test
      - name: valgrind
        run: |
          export CXX=/opt/rh/gcc-toolset-10/root/usr/bin/g++
          export CC=/opt/rh/gcc-toolset-10/root/usr/bin/gcc
          make valgrind
      - name: Archive valgrind tests reports
        uses: actions/upload-artifact@v3
        with:
          name: valgrind tests reports
          path: bin/Linux-x86_64-debug/unit_tests/Testing/Temporary/


  bionic:
    if: github.event.label.name == 'multi-build' || github.event.label.name == 'bionic'
    runs-on: ubuntu-latest
    container:
      image: ubuntu:bionic
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install dependencies
        run: .install/install_script.sh
      - name: unit tests
        run: make unit_test
      - name: valgrind
        run: make valgrind
      - name: Archive valgrind tests reports
        uses: actions/upload-artifact@v3
        with:
          name: valgrind tests reports
          path: bin/Linux-x86_64-debug/unit_tests/Testing/Temporary/

  xenial:
    if: github.event.label.name == 'multi-build' || github.event.label.name == 'xenial'
    runs-on: ubuntu-latest
    container:
      image: ubuntu:bionic
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install dependencies
        run: .install/install_script.sh
      - name: unit tests
        run: make unit_test
      - name: valgrind
        run: make valgrind
      - name: Archive valgrind tests reports
        uses: actions/upload-artifact@v3
        with:
          name: valgrind tests reports
          path: bin/Linux-x86_64-debug/unit_tests/Testing/Temporary/

  focal:
    if: github.event.label.name == 'multi-build' || github.event.label.name == 'focal'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install dependencies
        run: sudo .install/install_script.sh
      - name: unit tests
        run: make unit_test
      - name: valgrind
        run: make valgrind
      - name: Archive valgrind tests reports
        uses: actions/upload-artifact@v3
        with:
          name: valgrind tests reports
          path: bin/Linux-x86_64-debug/unit_tests/Testing/Temporary/

  jammy:
    if: github.event.label.name == 'multi-build' || github.event.label.name == 'jammy'
    runs-on: ubuntu-latest
    container:
      image: ubuntu:jammy
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install dependencies
        run: .install/install_script.sh
      - name: unit tests
        run: make unit_test
      - name: valgrind
        run: make valgrind
      - name: Archive valgrind tests reports
        uses: actions/upload-artifact@v3
        with:
          name: valgrind tests reports
          path: bin/Linux-x86_64-debug/unit_tests/Testing/Temporary/

  macos:
    if: github.event.label.name == 'multi-build' || github.event.label.name == 'macos'
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: install dependencies
        run: .install/install_script.sh
      - name: unit tests
        run: make unit_test

  arm:
    if: github.event.label.name == 'multi-build' || github.event.label.name == 'arm'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: circle-ci job runner
        id: curl-circle-ci
        uses: Open-Source-Contrib/circle-ci-trigger-action@latest
        with:
          circle_ci_token: ${{ secrets.CIRCLE_CI_SECRET}}
          circle_ci_job: build-arm
          circle_ci_project_url: ${{ github.event.pull_request.head.ref }}
