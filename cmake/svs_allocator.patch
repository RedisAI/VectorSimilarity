diff --git a/include/svs/lib/memory.h b/include/svs/lib/memory.h
index c79fff1..7f55390 100644
--- a/include/svs/lib/memory.h
+++ b/include/svs/lib/memory.h
@@ -61,7 +61,7 @@ template <typename T> struct Allocator {
     }
 
     constexpr void deallocate(value_type* ptr, size_t count) noexcept {
-        ::operator delete(ptr, count);
+        ::operator delete(static_cast<void*>(ptr), sizeof(T) * count, std::align_val_t(alignof(T)));
     }
 
     // Intercept zero-argument construction to do default initialization.
diff --git a/include/svs/lib/threads/threadlocal.h b/include/svs/lib/threads/threadlocal.h
index f6d399f..5fdebd2 100644
--- a/include/svs/lib/threads/threadlocal.h
+++ b/include/svs/lib/threads/threadlocal.h
@@ -82,7 +82,8 @@ template <typename T, size_t Alignment = CACHE_LINE_BYTES> struct AlignedAllocat
     }
 
     void deallocate(value_type* ptr, size_t count) noexcept {
-        ::operator delete(ptr, count, std::align_val_t{alignment});
+        size_t bytes = alignment * lib::div_round_up(sizeof(T) * count, alignment);
+        ::operator delete(static_cast<void*>(ptr), bytes, std::align_val_t{alignment});
     }
 };
 
